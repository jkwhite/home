ls()
ll()
ls()
wolfram()
rule(1,1,2)
rule(1,1,2).random().next()
rule(1,1,2)
rule(1,1,2).random().next()
ca(600, 600, rule(1,1,2).random().next())
rule(1,1,2)
ca(600, 600, rule(1,1,2))
ca(600, 600, rule(1,1,2).random().next())
^C
ca(600, 600, rule(1,1,2).random().next())
ca(10, 10, rule(1,1,2).random().next())
ca(100, 100, rule(1,1,2).random().next())
0..10
0..10.each { it }
0..10.each { ca(100, 100, rule(1,1,2).random().next()) }
0..10.collect { ca(100, 100, rule(1,1,2).random().next()) }
0..10.map
10.each 
[0, 1]
[0, 1].methods
[0, 1].ff
[0, 1].
[0, 1].class.methods
0..10.collect { ca(100, 100, rule(1,1,2).random().next()) }
1
(0..10).collect { ca(100, 100, rule(1,1,2).random().next()) }
(0..20).collect { ca(100, 100, rule(1,1,2).random().next()) }
(0..15).collect { ca(100, 100, rule(1,1,2).random().next()) }
awd
for(int i=0;i<5;i++) (0..15).collect { ca(100, 100, rule(1,1,2).random().next()) }
for(int i=0;i<5;i++) { (0..15).collect { ca(100, 100, rule(1,1,2).random().next()) } }
print(1)
about()
for(int i=0;i<5;i++) { $c.print (0..15).collect { ca(100, 100, rule(1,1,2).random().next()) } }
for(int i=0;i<5;i++) { $c.print ((0..15).collect { ca(100, 100, rule(1,1,2).random().next())) } }
for(int i=0;i<5;i++) { $c.print ((0..15).collect { ca(100, 100, rule(1,1,2).random().next()) }) }
__random__.nextInt()
for(int i=0;i<5;i++) { $c.print ((0..15).collect { ca(100, 100, rule(1,1,2).random().next()) }) }
clear()
for(int i=0;i<10;i++) { $c.print ((0..15).collect { ca(100, 100, rule(1,1,2).random().next()) }) }
for(int i=0;i<100;i++) { $c.print ((0..15).collect { ca(100, 100, rule(1,1,2).random().next()) }) }
for(int i=0;i<100;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,2).random().next()) })
for(int i=0;i<100;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,8).random().next()) })
for(int i=0;i<100;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(15))
for(int i=0;i<100;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16))
for(int i=0;i<100;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, ['padding':0]))
clear()
for(int i=0;i<100;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, ['padding':0]))
clear()
for(int i=0;i<100;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, ['padding':0]))
clear()
for(int i=0;i<100;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, ['padding':0]))
clear()
for(int i=0;i<5;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, ['padding':0]))
for(int i=0;i<5;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, ['padding':20]))
for(int i=0;i<5;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, [padding:20]))
for(int i=0;i<5;i++) $c.print ((0..15).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, [margin:20]))
$c.print ((0..50).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, [margin:20]))
$c.print ((0..64).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, [margin:0]))
$c.print ((0..63).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, [margin:0]))
$c.print ((0..127).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, [margin:0]))
clear()
$c.print ((0..127).collect { ca(100, 100, rule(1,1,8).random().next()) }.table(16, [margin:0]))
$c.print ((0..127).collect { ca(100, 100, rule(1,1,8).random().next()).fx([rotate:90]) }.table(16, [margin:0]))
$c.print ((0..127).collect { ca(100, 100, rule(1,1,8).random().next()).fx([rotate:180]) }.table(16, [margin:0]))
$c.print ((0..127).collect { ca(100, 100, rule(1,1,8).random().next()).fx([rotate:26]) }.table(16, [margin:0]))
$c.print (^C(0..127).collect { ca(100, 100, rule(1,1,8).random().next()).fx([rotate:26]) }.table(16, [margin:0]))
rule(1,1,9).random().take(127).collect { ca(100,100,it) }.table(16)
rule(1,1,9).random().take(128).collect { ca(100,100,it) }.table(16)
rule(1,1,2).iterator().collect { ca(100,100,it) }.table(16)
rule(1,1,2).iterator().*ca(100,100,it)
rule(1,1,2).iterator()*.ca(100,100,it)
rule(1,1,2).iterator()
rules(1,1,2).iterator()
rules(1,1,2)
rules(1,1,2).iterator()*.ca(100,100,it)
rules(1,1,2).iterator()*.ca(100,100)
rules(1,1,2).iterator()*.ca(100,100).table(16)
clear()
rules(1,1,2).iterator()*.ca(100,100).table(16)
rules(1,1,2).iterator()*.ca([wid:100,hei:100]).table(16)
rules(1,1,2).iterator()*.ca(100,100).table(16)
rules(1,1,2).iterator()*.ca(100,100,init=init_random()).table(16)
rules(1,1,2).iterator()*.ca(100,100,null,init_random()).table(16)
rules(1,1,2).iterator()*.ca(100,100,null,init_single()).table(16)
rules(1,1,2).iterator()*.ca(100,100,['black','white'],init_single()).table(16)
clear()
rules(1,1,2).iterator()*.ca(100,100,['black','white'],init_single()).table(16)
rules(1,1,2).iterator()*.ca(100,100,['black','white'],init_single()).table(18)
clear()
rules(1,1,2).iterator()*.ca(100,100,['black','white'],init_single()).table(18)
rules(1,1,2).iterator()*.ca(70,70,['black','white'],init_single()).table(18)
rules(1,1,2).iterator()*.ca(70,70,['black','white'],init_single()).table(25)
clear()
rules(1,1,2).iterator()*.ca(70,70,['black','white'],init_single()).table(25)
clear()
rules(1,1,3).iterator().take(256)*.ca(70,70,['black','white'],init_single()).table(25)
rules(1,1,3).iterator().take(2048)*.ca(70,70,['black','white'],init_single()).table(25)
rules(1,1,3).random().take(2048)*.ca(70,70,['black','white'],init_single()).table(25)
rules(1,1,3).random().take(2048)*.ca(70,70,['black','white','red'],init_single()).table(25)
rules(1,1,3).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).table(25)
rules(1,1,3).random().take(2048)*.ca(70,70,['black','white','red'],init_single()).table(25)
rules(1,1,3).random().take(2048)*.ca(70,70,['black','white','red'],init_single()).fx('label':'xyu').table(25)
rules(1,1,3).random().take(2048)*.ca(70,70,['black','white','red'],init_single()).f^Cx('label':'xyu').table(25)
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).table(25)
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, it.rule.id() }.table(25)
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, it.rule.id()) }.table(25)
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10id()) }.table(25)
^Crules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, it.rule.id()) }.table(25)
^C
^Crules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new ^Cit.rule.id()) }.table(25)
imp org.excelsi.nausicaa.ca.Info
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10id()) }.table(25)
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id()) }.table(25)
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'right']) }.table(25)
imp org.excelsi.nausicaa.ca.Info
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'right']) }.table(25)
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'bottom_center']) }.table(25)
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'top_center']) }.table(25)
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'top_right']) }.table(25)
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'top']) }.table(25)
imp org.excelsi.nausicaa.ca.Info
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'top']) }.table(25)
rules(1,1,3).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'top']) }.table(25)
clear()
rules(1,1,3).random().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'top']) }.table(25)
clear()
rules(1,1,3).random().take(2048)*.ca(70,70,['black','white','red'],init_random()).collect { label(it, new Info(it).b10Id(), [pos:'top']) }.table(25)
clear()
rules(1,1,2).iterator().take(2048)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'top']) }.table(25)
rules(1,1,2).iterator().take(5).collect { h -> rules(1,1,2).iterator().take(2048)*.withHyperrule(h)*ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'top']) }.table(25) }
rules(1,1,2).iterator().take(5).collect { h -> rules(1,1,2).iterator().take(2048)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'top']) }.table(25) }
256*256
clear()
rules(1,1,2).iterator().take(20).collect { h -> rules(1,1,2).iterator().take(2048)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, new Info(it).b10Id(), [pos:'top']) }.table(25) }
clear()
rules(1,1,2).iterator().take(20).collect { h -> rules(1,1,2).iterator().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, "${new Info(it).b10Id()} ${new Info(h).b10Id()}", [pos:'top']) }.table(25) }
rules(1,1,2).iterator().take(20).collect { h -> rules(1,1,2).iterator().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, "${new Info(it).b10Id()} ${Info.b10Id(h,5)}", [pos:'top']) }.table(25) }
rules(1,1,2).iterator().take(20).collect { h -> rules(1,1,2).iterator().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, "${new Info(it).b10Id()} ${Info.b10Id(h,5)}", [pos:'top']) }.table(20) }.table(1)
clear()
rules(1,1,2).iterator().take(20).collect { h -> rules(1,1,2).iterator().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, "${new Info(it).b10Id()} ${Info.b10Id(h,5)}", [pos:'top']) }.table(20) }.table(1)
clear()
rules(1,1,2).iterator().take(256).collect { h -> rules(1,1,2).random().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_single()).collect { label(it, "${new Info(it).b10Id()} ${Info.b10Id(h,10)}", [pos:'top']) }.table(15) }.table(1)
clear()
rules(1,1,2).iterator().take(256).collect { h -> rules(1,1,2).random().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_random()).collect { label(it, "${new Info(it).b10Id()} ${Info.b10Id(h,10)}", [pos:'top']) }.table(15) }.table(1)
claer()
clear()
rules(1,1,2).iterator().take(256).collect { h -> rules(1,1,2).random().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_random()).collect { label(it, "${new Info(it).b10Id()} ${Info.b10Id(h,10)}", [pos:'top']) }.table(20) }.table(1)
clear()
rules(1,1,3).random().take(20).collect { h -> rules(1,1,3).random().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_random()).collect { label(it, "${new Info(it).b10Id()} ${Info.b10Id(h,10)}", [pos:'top']) }.table(20) }.table(1)
rules(1,1,3).random().take(20).collect { h -> rules(1,1,3).random().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_random()).collect { label(it, "${new Info(it).b10Id()} ${Info.b10Id(h,5)}", [pos:'top']) }.table(20) }.table(1)
clear()
rules(1,1,3).random().take(20).collect { h -> rules(1,1,3).random().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_random()).table(20) }.table(1)
rules(1,1,9).random().take(20).collect { h -> rules(1,1,9).random().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_random()).table(20) }.table(1)
clear()
rules(1,1,9).random().take(20).collect { h -> rules(1,1,9).random().take(20)*.withHyperrule(h)*.ca(70,70,null,init_random()).table(20) }.table(1)
clear()
rules(1,1,9).random().take(20).collect { h -> rules(1,1,9).random().take(20)*.withHyperrule(h)*.ca(70,70,null,init_random()).table(20) }.table(1)
clear()
rules(1,1,9).random().take(20).collect { h -> rules(1,1,9).random().take(20)*.withHyperrule(h)*.ca(70,70,null,init_random()).table(20) }.table(1)
__random__.nextInt()
clear()
rules(1,1,9).random().take(20).collect { h -> rules(1,1,9).random().take(20)*.withHyperrule(h)*.ca(70,70,null,init_random()).table(20) }.table(1)
rules(1,1,2).iterator().take(256).collect { h -> rules(1,1,2).random().take(20)*.withHyperrule(h)*.ca(70,70,['black','white','red'],init_random()).collect { label(it, "${new Info(it).b10Id()} ${Info.b10Id(h,10)}", [pos:'top']) }.table(20) }.table(1)
clear()
rules(1,1,2).create(129)
rules(1,1,2).rule(129)
rules(1,1,2).rule(129).ca(100,100)
rules(1,1,2).rule(41).withHyperrule(rules(1,1,2).rule(184)).ca(100,100)
rules(1,1,2).rule(41).withHyperrule(rules(1,1,2).rule(184)).ca(1000,1000,['black','white'])
rules(1,1,2).rule(41).withHyperrule(rules(1,1,2).rule(184)).ca(800,800,['black','white'])
rules(1,1,2).rule(137).withHyperrule(rules(1,1,2).rule(185)).ca(800,800,['black','white'])
rules(1,1,2).rule(137).withHyperrule(rules(1,1,2).rule(185)).ca(800,800,['black','white'], init_single())
rules(1,1,2).rule(41).withHyperrule(rules(1,1,2).rule(184)).ca(800,800,['black','white'], init_single())
rules(1,1,2).rule(72).withHyperrule(rules(1,1,2).rule(185)).ca(800,800,['black','white'], init_single())
rules(1,1,2).rule(72).withHyperrule(rules(1,1,2).rule(185)).ca(800,800,['black','white'], init_random())
__random__.nextInt()
rules(1,1,2).rule(72).withHyperrule(rules(1,1,2).rule(185)).ca(800,800,['black','white'], init_random())
rules(1,1,2).rule(79).withHyperrule(rules(1,1,2).rule(182)).ca(800,800,['black','white'], init_random())
rules(1,1,2).rule(79).withHyperrule(rules(1,1,2).rule(182)).ca(800,800,['black','white'], init_single())
rules(1,1,2).rule(13).withHyperrule(rules(1,1,2).rule(205)).ca(800,800,['black','white'], init_single())
rules(1,1,2).rule(13).withHyperrule(rules(1,1,2).rule(205)).ca(800,800,['black','white'], init_random())
rules(1,1,2).rule(73).withHyperrule(rules(1,1,2).rule(214)).ca(800,800,['black','white'], init_random())
hr1d = { r1, r2 -> rules(1,1,2).rule(r1).withHyperrule(rules(1,1,2).rule(r2)).ca(800,800,['black','white'], init_random()) }
hr1d(9,227)
hr1d(176,240)
hr1d(5,193)
rules(1,1,8).rule(102677).ca(800,800)
rules(1,1,10).rule(19771026).ca(800,800)
rules(1,1,15).random().ca(800,800)
rules(1,1,15).random().next().ca(800,800)
rules(1,1,15).random().take(20)*.ca(300,300).table(3)
clear()
rules(1,1,15).random().take(20)*.ca(300,300).table(5)
clear()
rules(1,1,15).random().take(20)*.ca(300,300).table(5)
pal_grey(2)
rules(1,1,15).random().take(20)*.ca(300,300, pal_grey(15)).table(5)
pal_grey(2)
rules(1,1,15).random().take(20)*.ca(300,300, pal_grey(15)).table(5)
pal_grey(2)
rules(1,1,15).random().take(20)*.ca(300,300, pal_grey(15)).table(5)
clear()
rules(1,1,4).random().take(20)*.ca(200,200, pal_grey(4)).table(5)
clear()
rules(1,1,4).random().take(20)*.ca(200,200, pal_grey(4)).table(5)
clear()
rules(1,1,4).random().take(200)*.ca(20,20, pal_grey(4)).table(25, [margin:0])
rules(1,1,4).random().take(2000)*.ca(20,20, pal_grey(4)).table(100, [margin:0])
rules(1,1,4).random().take(2000)*.ca(30,30, pal_grey(4)).table(60, [margin:0])
rules(1,1,4).random().take(2000)*.ca(30,30, pal_grey(4)).table(63, [margin:0])
clear()
rules(1,1,4).random().take(2000)*.ca(30,30, pal_grey(4)).table(63, [margin:0])
clear()
rules(1,1,4).random().take(2000)*.ca(30,30).table(63, [margin:0])
clear()
rules(1,1,4).random().take(20000)*.ca(30,30).table(63, [margin:0])
clear()
rules(1,1,4).random().take(200)*.ca(30,30).table(63, [margin:0])
0..10.each { print(rules(1,1,4).random().take(200)*.ca(30,30).table(63, [margin:0])) }
(0..10).each { print(rules(1,1,4).random().take(200)*.ca(30,30).table(63, [margin:0])) }
print "foo"
$c.print("foo")
0..10.each { $c.print(rules(1,1,4).random().take(200)*.ca(30,30).table(63, [margin:0])) }
(0..10).each { $c.print(rules(1,1,4).random().take(200)*.ca(30,30).table(63, [margin:0])) }
(0..10).each { $c.print(rules(1,1,4).random().take(200)*.ca(50,50).table(40, [margin:0])) }
(0..10).each { $c.print(rules(1,1,4).random().take(100)*.ca(100,100).table(20, [margin:0])) }
(0..10).each { $c.print(rules(1,1,4).random().take(100)*.ca(100,100).table(19, [margin:0])) }
(0..10).each { $c.print(rules(1,1,4).random().take(95)*.ca(100,100).table(19, [margin:0])) }
clear()
(0..10).each { $c.print(rules(1,1,4).random().take(95)*.ca(100,100).table(19, [margin:0])); Thread.sleep(4000) }
clear()
(0..2).each { $c.print(rules(1,1,4).random().take(95)*.ca(100,100).table(19, [margin:0])); Thread.sleep(1000); $c.clear() }
(0..2).each { $c.print(rules(1,1,4).random().take(195)*.ca(100,100).table(19, [margin:0])); Thread.sleep(1000); $c.clear() }
(0..2).each { $c.print(rules(1,1,4).random().take(190)*.ca(100,100).table(19, [margin:0])); Thread.sleep(1000); $c.clear() }
(0..200).each { $c.print(rules(1,1,4).random().take(190)*.ca(100,100).table(19, [margin:0])); Thread.sleep(1000); $c.clear() }
rules(1,1,4).random().take(200)*.ca([30,30]).table(63, [margin:0])
rules(1,1,4).random().take(200)*.ca([50,50]).table(42, [margin:0])
rules(1,1,4).random().take(200)*.ca([50,50]).table(40, [margin:0])
rules(1,1,4).random().take(200)*.ca([50,50]).table(38, [margin:0])
claer()
clear()
rules(1,1,4).random().take(200)*.ca([50,50]).table(38, [margin:0])
rules(2,1,4).random().take(200)*.ca([50,50]).table(38, [margin:0])
rules(2,1,4).random().take(200)*.ca([50,50,1]).table(38, [margin:0])
rules(2,1,4).random().take(200)*.ca([50,50,50]).table(38, [margin:0])
rules(2,1,4).random().take(200)*.ca([50,50,100]).table(38, [margin:0])
rules(2,1,4).random().take(200)*.ca([50,50,200]).table(38, [margin:0])
rules(2,1,2).random().next().ca([500,500,500])
clear()
rules(2,1,2).random().next().ca([500,500,0])
rules(2,1,2).random().next().ca([500,500,1000])
rules(2,1,2).random().next().ca([500,500,1]).animate()
rules(2,1,2).random().take(10)*.ca([200,200,1]).table(10)
rules(2,1,2).random().take(18)*.ca([200,200,1]).table(9)
clear()
rules(2,1,2).random().take(18)*.ca([200,200,1])*.animate().table(9)
rules(2,1,2).random().take(9)*.ca([200,200,1])*.animate().table(3)
rules(2,1,2).random().next().ca([500,500,1]).animate()
rules(2,1,2).random().next().ca([500,500,1,['black','white']]).animate()
rules(2,1,2).random().next().ca([500,500,1],['black','white']).animate()
rule(1,1,2).rule(129).ca(100,100)
rules(1,1,2).rule(129).ca(100,100)
rules(1,1,2).rule(129).ca([100,100])
rules(1,1,2).rule(129).ca([3,3])
rules(1,1,2).rule(129).ca([30,30])
rules(2,1,2).random().next().ca([500,500,1],['black','white']).animate()
rules(1,1,2).rule(129).ca([300,300])
rules(2,1,2).random().next().ca([500,500,1],['black','white'])
rules(2,1,2).random().next().ca([500,500,0],['black','white'])
__random__.nextInt()
rules(2,1,2).random().next().ca([500,500,0],['black','white'])
rules(2,1,2).random().next().ca([500,500,-1],['black','white'])
rules(2,1,2).random().next().ca([5,5,-1],['black','white'])
rules(2,1,2).random().next().ca([5,5,1],['black','white'])
rules(2,1,2).random().next().ca([5,5,2],['black','white'])
rules(2,1,2).random().next().ca([5,5,1],['black','white'])
rules(2,1,2).random().next().ca([5,5,2],['black','white'])
rules(2,1,2).random().next().ca([50,50,2],['black','white'])
rules(2,1,2).random().next().ca([50,50,20],['black','white'])
rules(2,1,2).random().next().ca([50,50,1],['black','white']).animate()
rules(2,1,2).random().next().ca([500,500,1],['black','white']).animate()
ddwdwawdawd^C
^C
rules(2,1,2).random().next().ca([500,500,1],['black','white']).animate()
